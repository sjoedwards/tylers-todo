{"version":3,"sources":["components/Header.js","Firebase/config.js","components/Todo.js","components/AddTodo.js","App.js","serviceWorker.js","index.js"],"names":["Header","style","width","height","background","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","Todo","props","useState","show","setShow","newTitle","setnewTitle","newDescription","setnewDescription","startDate","setstartDate","dueDate","setdueDate","todoItem","options","weekday","year","month","day","formatDatesToDefault","dateItem","newDueDate","Date","getUTCMonth","getUTCDate","getUTCFullYear","Modal","onHide","e","closeButton","Title","Body","className","Label","InputField","defaultValue","todo","onChange","target","value","Textarea","description","selectRange","start","seconds","due","console","log","updateDates","tileDisabled","activeStartDate","date","view","getDay","Footer","Button","onClick","preventDefault","collection","doc","id","set","merge","margin","category","created","toLocaleDateString","undefined","firsttime","secondTime","calculateTimeRemaining","delete","styled","label","textarea","input","button","div","AddTodo","title","setTitle","setDescription","setCategory","for","display","type","checked","setDates","returnValue","contentEditable","addTodoFunction","App","todos","setTodos","useEffect","isCancelled","orderBy","onSnapshot","snapshot","docs","map","data","timestamp","cleanState","add","individualTodo","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2e114085.chunk.js","sourcesContent":["import React from 'react';\n// import { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\n// import AddTodo from './AddTodo';\n\nconst Header = () => {\n\n  return (\n    <div style={{width:\"100%\", height:\"30px\", background:\"grey\"}}>\n      {/* <Link to=\"/home\">\n        Home\n      </Link>\n      <Link to=\"/add-to-do\">\n        Add to do\n      </Link> */}\n      \n    </div>\n  )\n}\n\nexport default Header;","import firebase from 'firebase';\n// import 'firebase/firestore'\n// import 'firebase/auth';\n\n  // Your web app's Firebase configuration\n  const firebaseApp =  firebase.initializeApp ({\n    apiKey: \"AIzaSyCfoOe7kvLUCNr19yseMgjTTfogv70k3qU\",\n    authDomain: \"tf-todo-7ca0d.firebaseapp.com\",\n    databaseURL: \"https://tf-todo-7ca0d.firebaseio.com\",\n    projectId: \"tf-todo-7ca0d\",\n    storageBucket: \"tf-todo-7ca0d.appspot.com\",\n    messagingSenderId: \"1047018296336\",\n    appId: \"1:1047018296336:web:d94a47019e8d036e5fa695\"\n  });\n\n  const db = firebaseApp.firestore();\n  export default db;","import React, { useState } from 'react'\nimport db from '../Firebase/config';\nimport Modal from 'react-bootstrap/Modal';\nimport styled from 'styled-components';\nimport Calendar from 'react-calendar';\n\nexport default function Todo(props) {\n\n  const [show, setShow] = useState(false);\n  const [newTitle, setnewTitle] = useState('');\n  const [newDescription, setnewDescription] = useState('');\n  const [startDate, setstartDate] = useState('')\n  const [dueDate, setdueDate] = useState('')\n\n  const { todoItem } = props;\n  const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };\n\n  const disableWeekends = ({activeStartDate, date, view }) =>\n   date.getDay() === 0 || date.getDay() === 6;\n\n\n\n  const formatDatesToDefault = (dateItem) => {\n    const newDueDate = new Date(dateItem * 1000);\n  \n    var month = newDueDate.getUTCMonth() + 1; //months from 1-12\n    var day = newDueDate.getUTCDate();\n    var year = newDueDate.getUTCFullYear();\n\n    const newdate = year + \" \" + month + \" \" + day;\n    return new Date(newdate);\n  }\n\n  const calculateTimeRemaining = () => {\n    const firsttime = new Date(todoItem.due.seconds * 1000).toLocaleDateString(undefined, options)\n    const secondTime = new Date(todoItem.start.seconds * 1000).toLocaleDateString(undefined, options)\n\n    const diffInMs   = new Date(firsttime) - new Date(secondTime)\n    const diffInDays = diffInMs / (1000 * 60 * 60 * 24);\n    return diffInDays;\n  }\n\n  const updateDates = (e) =>{\n    console.log(e[0]);\n    console.log(e[1]);\n\n    setstartDate(e[0]);\n    setdueDate(e[1]);\n\n  }\n\n  const deleteTodo = () => {\n    db.collection('todos').doc(todoItem.id).delete()\n  }\n\n  const updateTodo = (e) => {\n    e.preventDefault();\n    db.collection('todos').doc(todoItem.id).set({\n      todo: newTitle,\n      description: newDescription,\n      startDate: startDate,\n      dueDate: dueDate\n\n    }, { merge: true})\n    setShow(false);\n  }\n  \n\n  return (\n    <>\n      <Modal \n        show={show} \n        onHide={e => setShow(false)}\n      >\n\n        <Modal.Header \n          closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n\n        <Modal.Body>\n          <div className=\"col-12\">\n            <Label>Title: </Label>\n              <InputField \n                defaultValue={todoItem.todo}\n                // value={title}\n                onChange={e => setnewTitle(e.target.value)}\n              />\n          </div>\n      \n          <div className=\"col-12\">\n            <Label>Description: </Label>\n            <Textarea\n              defaultValue={todoItem.description}\n              // value={newDescription}\n              onChange={e => setnewDescription(e.target.value)}\n            />\n          </div>\n\n          <div className=\"col-12\">\n            <Label>Start and Finish Date</Label>\n            <Calendar\n              // style={{width:\"25%\"}}\n              selectRange\n              defaultValue={[formatDatesToDefault(todoItem.start.seconds), formatDatesToDefault(todoItem.due.seconds)]}\n              // onChange={e => setstartDate(e[0])}\n              onChange={e => updateDates(e)}\n              tileDisabled={disableWeekends}>  \n            </Calendar>\n          </div>\n\n        </Modal.Body>\n\n        <Modal.Footer>\n          <div className=\"col-12\">\n            <Button \n              onClick={updateTodo}>Update To do\n            </Button>\n\n            {/* <Button \n              onClick={e => setShow(false)}>Close modal\n            </Button> */}\n          </div>\n        </Modal.Footer>\n      </Modal>\n\n    <div className=\"row\" style={{background:\"grey\",margin:\"20px\"}} >\n      <div className=\"col-md-11\" onClick={e =>setShow(true)}>\n        <h2>{todoItem.todo}</h2>\n        <p>{todoItem.description}</p>\n        <p>{todoItem.category}</p>\n        <p>Created at: {new Date(todoItem.created.seconds * 1000).toLocaleDateString(undefined, options)}</p>\n        <p>Start Date: {new Date(todoItem.start.seconds * 1000).toLocaleDateString(undefined, options)}</p>\n        <p>Due Date: {new Date(todoItem.due.seconds * 1000).toLocaleDateString(undefined, options)}</p>\n        <p>{calculateTimeRemaining(todoItem)} Days left</p>\n      </div>\n\n      <div className=\"col-md-1\">\n        <button onClick={e => setShow(true)}>Edit</button>\n        <button onClick={deleteTodo}>Remove</button>\n      </div>\n    </div>\n\n    </>\n  )\n}\n\nconst Label = styled.label`\n  display:block;\n  text-align:left;\n  font-size:24px;\n`;\n\nconst Textarea = styled.textarea`\n  display:block;\n  padding-left:10px;\n  width:100%;\n  resize:none;\n  height:100px;\n`;\n\nconst InputField = styled.input`\n  display:block;\n  padding-left:10px;\n  width:100%;\n`;\n\nconst Button = styled.button`\n  font-size:16px;\n  background-color:cream;\n  bottom: 0;\n  position: absolute;\n  right: 0;\n  margin-bottom: 20px;\n`;\n\nconst ModalRow = styled.div`\n  display:block;\n  background: grey;\n  height:600px;\n`;\n\n","import React from 'react'\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\nexport default function AddTodo(props) {\n\n  const { \n    title,\n    description,\n    setTitle,\n    setDescription,\n    category,\n    setCategory,\n    dueDate,\n    setdueDate,\n    startDate,\n    setstartDate\n  } = props;\n  //props destructuring\n\n  const disableWeekends = ({activeStartDate, date, view }) =>\n   date.getDay() === 0 || date.getDay() === 6;\n\n  const setDates = (e) => {\n    // const length = 11;\n    // const formattedStartDate = String(e[0]).substr(0, length);\n    // const formattedDueDate = String(e[1]).substr(0, length);\n\n    // setstartDate(formattedStartDate);\n    // setdueDate(formattedDueDate);\n    // const test1 = (e[0]);\n\n    // // var dt = new Date();\n    // var month = test1.getUTCMonth() + 1; //months from 1-12\n    // var day = test1.getUTCDate();\n    // var year = test1.getUTCFullYear();\n\n    // const newdate = year + \" \" + month + \" \" + day;\n\n    // console.log(newdate);\n\n    // // console.log(new Date());\n    setstartDate(e[0]);\n    setdueDate(e[1]);\n  }\n  console.log(startDate);\n\n  return (\n    <>\n  <div className=\"row\" style={{background:\"#f0f0f0\"}}>\n    <div className=\"col-md-12\">\n        <label>Title: </label>\n          <input value={title} \n            onChange={e => setTitle(e.target.value)} \n          />\n    </div>\n\n    <div className=\"col-md-12\">\n        <label>Description: </label>\n          <textarea \n            value={description}\n            onChange={e => setDescription(e.target.value)} \n          />\n    </div>  \n\n    <div className=\"col-md-12\">\n      <form>\n        \n        <label for=\"techSkills\" style={{display:\"block\"}}>Technical Skills\n          <input \n            value=\"Technical Skills\"\n            type=\"radio\"\n            onChange={e => setCategory(e.target.value)}\n            checked={category === \"Technical Skills\"}\n            id=\"techSkills\">\n          </input>\n        </label>\n        \n        <label for=\"productAnalyst\" style={{display:\"block\"}}>Product Analyst Skills\n          <input \n            value=\"Product Analyst Skills\"\n            type=\"radio\"\n            checked={category === \"Product Analyst Skills\"}\n            onChange={e => setCategory(e.target.value)}\n            id=\"productAnalyst\">\n          </input>\n        </label>\n\n        <label for=\"andContributions\" style={{display:\"block\"}}>AND Contributions\n          <input \n            value=\"AND Contributions\"\n            type=\"radio\"\n            checked={category === \"AND Contributions\"}\n            onChange={e => setCategory(e.target.value)}\n            id=\"andContributions\">\n          </input>\n        </label>\n\n        <label for=\"other\" style={{display:\"block\"}}>Other\n          <input \n            value=\"Other\"\n            type=\"radio\"\n            checked={category === \"Other\"}\n            onChange={e => setCategory(e.target.value)}\n            id=\"other\">\n          </input>\n        </label>\n\n        <Calendar style={{width:\"25%\"}}\n      \n                  selectRange\n                  onChange={e => setDates(e)}\n                  returnValue={props.returnValue}\n                  tileDisabled={disableWeekends}\n        ></Calendar>\n        \n        <input\n          type=\"text\"\n          value={startDate}\n          contentEditable=\"false\"\n        />\n\n        <input\n          type=\"text\"\n          value={dueDate}\n          contentEditable=\"false\"\n        />\n      </form>\n    </div>\n\n    <div className=\"col-md-12\">\n      <button onClick={props.addTodoFunction}>Add Todo</button>\n    </div>\n  </div>\n  </>\n  )\n}\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Todo from './components/Todo';\nimport db from './Firebase/config';\n// import firebase from 'firebase';\nimport AddTodo from './components/AddTodo';\n \n\nfunction App() {\n\n  const [todos, setTodos] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [dueDate, setdueDate] = useState('');\n  const [startDate, setstartDate] = useState('');\n\n\n\n  useEffect(() => {\n    let isCancelled = false;\n    if (!isCancelled) {\n    db.collection('todos').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setTodos(snapshot.docs.map(doc => ({\n        id: doc.id,\n        todo: doc.data().todo,\n        description: doc.data().description,\n        category: doc.data().category,\n        created: doc.data().timestamp,\n        start: doc.data().startDate,\n        due: doc.data().dueDate\n\n      })))\n      //go through every single doc, get the todo field, and set that using setTodos\n    })}\n    console.log(\"useEffect ran\")\n    return () => {\n      isCancelled = true;\n    };\n  }, []);\n  \n  const addTodo = (e) => {\n    e.preventDefault();\n\n    db.collection('todos').add({\n      todo: title,\n      description: description,\n      category: category,\n      timestamp: new Date(),\n      startDate: startDate,\n      dueDate: dueDate\n    })\n    cleanState();\n  }\n\n  const cleanState = () => {\n    setTitle('');\n    setDescription('');\n    setCategory('');\n    setstartDate('');\n    setdueDate('');\n  }\n\n  return (\n    <>\n    <div className=\"App row\">\n      <div className=\"col-12\">\n        <Header style={{background:\"grey\"}}/>\n        <h1>To do's</h1>\n      </div>\n    </div>\n\n      <AddTodo \n        addTodoFunction={addTodo}\n        title={title} \n        setTitle={setTitle} \n        description={description} \n        setDescription={setDescription}\n        category={category}\n        setCategory={setCategory}\n        dueDate={dueDate}\n        setdueDate={setdueDate}\n        startDate={startDate}\n        setstartDate={setstartDate}\n      />\n  \n      <ul>\n        {todos.map(individualTodo => (\n          <Todo \n            todoItem={individualTodo}\n          />\n        ))\n        }\n      </ul>\n\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}